<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.7"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.7
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.7.xsd">

    <changeSet id="0000.initialize_database" author="Daniel A. Kolesnik">

        <sql>
            
            CREATE TABLE IF NOT EXISTS users (
                id serial,
                first_name character varying (128) DEFAULT NULL,
                last_name character varying (128) DEFAULT NULL,
                email character varying (128) NOT NULL,
                password character varying (65) DEFAULT NULL,
                mobile_phone character varying (20) DEFAULT NULL,
                is_enabled boolean DEFAULT TRUE,
                is_deleted boolean NOT NULL DEFAULT false,
                delete_date timestamp without time zone DEFAULT NULL,
                created_at timestamp without time zone NOT NULL DEFAULT now(),
                updated_at timestamp without time zone NOT NULL DEFAULT now(),
                created_by_id integer DEFAULT NULL,
                updated_by_id integer DEFAULT NULL,
                last_login_date timestamp without time zone DEFAULT NULL,
                
                CONSTRAINT pk_users PRIMARY KEY (id),
                CONSTRAINT fk_users_to_created_by FOREIGN KEY (created_by_id) REFERENCES users (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL,
                CONSTRAINT fk_users_to_updated_by FOREIGN KEY (updated_by_id) REFERENCES users (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE SET NULL
            );
            CREATE UNIQUE INDEX ui_users_email ON users (email);
            CREATE INDEX i_users_first_name ON users (first_name);
            CREATE INDEX i_users_last_name ON users (last_name);
            CREATE INDEX i_users_mobile_phone ON users (mobile_phone);
            CREATE INDEX i_users_created_at ON users (created_at);
            CREATE INDEX i_users_updated_at ON users (updated_at);

            CREATE TABLE IF NOT EXISTS roles (
                id serial,
                name character varying (128),
                
                CONSTRAINT pk_roles PRIMARY KEY (id)
            );
            CREATE UNIQUE INDEX IF NOT EXISTS ui_roles_name ON roles (name);

            CREATE TABLE IF NOT EXISTS user_roles (
                id serial,
                user_id integer,
                role_id integer,
                
                CONSTRAINT pk_user_roles PRIMARY KEY (id),
                CONSTRAINT fk_user_roles_to_user FOREIGN KEY (user_id) REFERENCES users (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE,
                CONSTRAINT fk_user_roles_to_role FOREIGN KEY (role_id) REFERENCES roles (id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE CASCADE
            );
            CREATE UNIQUE INDEX IF NOT EXISTS ui_user_roles_user_role ON user_roles (user_id, role_id);

        </sql>

        <rollback>
            <sql>
                DROP TABLE IF EXISTS user_roles;
                DROP TABLE IF EXISTS roles;
                DROP TABLE IF EXISTS users;
            </sql>
        </rollback>
        
    </changeSet>
    
</databaseChangeLog>